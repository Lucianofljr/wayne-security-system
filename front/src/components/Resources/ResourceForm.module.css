.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 1rem;
}

.modal {
  background: white;
  border-radius: 16px;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  width: 100%;
  max-width: 600px;
  max-height: 90vh;
  overflow: hidden;
  animation: modalEnter 0.3s ease-out;
}

.modal.dark {
  background: var(--card-background, #161b22);
  color: var(--primary-text, #c9d1d9);
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: 2rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.modal.dark .header {
  border-bottom-color: rgba(255, 255, 255, 0.1);
}

.headerContent {
  display: flex;
  gap: 1rem;
  align-items: flex-start;
}

.headerIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  background: rgba(59, 130, 246, 0.1);
  color: #3b82f6;
  border-radius: 12px;
  flex-shrink: 0;
}

.header h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 0 0.5rem 0;
  color: var(--primary-text, #1f2937);
}

.modal.dark .header h2 {
  color: var(--primary-text, #c9d1d9);
}

.header p {
  font-size: 0.875rem;
  color: var(--secondary-text, #6b7280);
  margin: 0;
}

.closeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border: none;
  border-radius: 10px;
  background: rgba(0, 0, 0, 0.05);
  color: var(--secondary-text, #6b7280);
  cursor: pointer;
  transition: all 0.2s ease;
}

.closeButton:hover:not(:disabled) {
  background: rgba(0, 0, 0, 0.1);
  color: var(--primary-text, #1f2937);
}

.closeButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.modal.dark .closeButton {
  background: rgba(255, 255, 255, 0.1);
  color: var(--secondary-text, #9ca3af);
}

.modal.dark .closeButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.2);
  color: var(--primary-text, #c9d1d9);
}

.form {
  padding: 2rem;
  overflow-y: auto;
  max-height: calc(90vh - 140px);
}

.formGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formGroup label {
  font-weight: 500;
  color: var(--primary-text, #1f2937);
  font-size: 0.875rem;
}

.modal.dark .formGroup label {
  color: var(--primary-text, #c9d1d9);
}

.required {
  color: #ef4444;
}

.formGroup input,
.formGroup select {
  padding: 0.75rem 1rem;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  font-size: 0.875rem;
  transition: all 0.2s ease;
  background: white;
  color: var(--primary-text, #1f2937);
}

.modal.dark .formGroup input,
.modal.dark .formGroup select {
  background: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.2);
  color: var(--primary-text, #c9d1d9);
}

.formGroup input:focus,
.formGroup select:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.formGroup input:disabled,
.formGroup select:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background: rgba(0, 0, 0, 0.05);
}

.modal.dark .formGroup input:disabled,
.modal.dark .formGroup select:disabled {
  background: rgba(255, 255, 255, 0.02);
}

.formGroup input.error,
.formGroup select.error {
  border-color: #ef4444;
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

.errorMessage {
  color: #ef4444;
  font-size: 0.75rem;
  font-weight: 500;
}

.summary {
  background: rgba(59, 130, 246, 0.05);
  border: 1px solid rgba(59, 130, 246, 0.2);
  border-radius: 8px;
  padding: 1rem;
  margin-bottom: 2rem;
}

.modal.dark .summary {
  background: rgba(59, 130, 246, 0.1);
  border-color: rgba(59, 130, 246, 0.3);
}

.summaryItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.875rem;
}

.summaryItem span {
  color: var(--secondary-text, #6b7280);
}

.summaryItem strong {
  color: #3b82f6;
  font-size: 1rem;
  font-weight: 600;
}

.actions {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  padding-top: 1rem;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.modal.dark .actions {
  border-top-color: rgba(255, 255, 255, 0.1);
}

.cancelButton,
.submitButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-weight: 500;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: none;
}

.cancelButton {
  background: rgba(0, 0, 0, 0.05);
  color: var(--secondary-text, #6b7280);
}

.cancelButton:hover:not(:disabled) {
  background: rgba(0, 0, 0, 0.1);
  color: var(--primary-text, #1f2937);
}

.modal.dark .cancelButton {
  background: rgba(255, 255, 255, 0.1);
  color: var(--secondary-text, #9ca3af);
}

.modal.dark .cancelButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.2);
  color: var(--primary-text, #c9d1d9);
}

.submitButton {
  background: #3b82f6;
  color: white;
}

.submitButton:hover:not(:disabled) {
  background: #2563eb;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

.cancelButton:disabled,
.submitButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-left-color: white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Responsividade */
@media (max-width: 768px) {
  .modal {
    margin: 1rem;
    max-width: calc(100% - 2rem);
  }
  
  .header,
  .form {
    padding: 1.5rem;
  }
  
  .formGrid {
    gap: 1rem;
  }
  
  .actions {
    flex-direction: column-reverse;
  }
  
  .cancelButton,
  .submitButton {
    width: 100%;
    justify-content: center;
  }
}

@media (min-width: 768px) {
  .formGrid {
    grid-template-columns: 1fr 1fr;
  }
  
  .formGroup:first-child {
    grid-column: 1 / -1;
  }
}

@keyframes modalEnter {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}